% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/export-methods.R
\name{export}
\alias{export}
\alias{export,DESeqAnalysis,ANY,ANY-method}
\alias{export,DESeqDataSet,ANY,ANY-method}
\title{Objects exported from other packages}
\usage{
export(object, ...)

\S4method{export}{DESeqAnalysis,ANY,ANY}(object, con, format, name = NULL, dir = ".", compress = FALSE)

\S4method{export}{DESeqDataSet,ANY,ANY}(object, con, format, name = NULL, dir = ".", compress = FALSE)
}
\arguments{
\item{object}{Object.
An object supporting \code{dim()}, or a supported class capable of being coerced
to \code{data.frame}, to be written to disk.}

\item{con}{FIXME}

\item{format}{FIXME}

\item{name}{\code{character(1)}.
Name to use on disk. If \code{NULL}, will use the name of the object instead.}

\item{dir}{\code{character(1)}.
Directory path.}

\item{compress}{\code{logical(1)}.
Apply gzip compression to all files.}

\item{...}{Additional arguments.}
}
\value{
Invisible \code{character}.
File path(s).
}
\description{
These objects are imported from other packages. Follow the links
below to see their documentation.

\describe{
  \item{IRanges}{\code{\link[IRanges:AtomicList-class]{CharacterList}}, \code{\link[IRanges:DataFrameList-class]{DataFrameList}}, \code{\link[IRanges:AtomicList-class]{FactorList}}, \code{\link[IRanges:IRanges-constructor]{IRanges}}, \code{\link[IRanges:AtomicList-class]{IntegerList}}, \code{\link[IRanges:AtomicList-class]{LogicalList}}, \code{\link[IRanges:AtomicList-class]{NumericList}}, \code{\link[IRanges:AtomicList-class]{RleList}}, \code{\link[IRanges:DataFrameList-class]{SplitDataFrameList}}}

  \item{S4Vectors}{\code{\link[S4Vectors:DataFrame-class]{DataFrame}}, \code{\link[S4Vectors:Factor-class]{Factor}}, \code{\link[S4Vectors:LLint-class]{LLint}}, \code{\link[S4Vectors:List-class]{List}}, \code{\link[S4Vectors:Rle-class]{Rle}}, \code{\link[S4Vectors:SimpleList-class]{SimpleList}}}
}
}
\details{
Size-factor normalized coutns and FPKM values are calculated on the fly and
exported automatically.
}
\note{
Updated 2021-09-24.
}
\section{Row names}{




Some export utilities in R have a tendency to drop row names when writing to
disk in CSV format. For example, the \href{https://readr.tidyverse.org/}{readr} family of functions never
write row names by design. This is a \emph{really poor} default setting for
handling genomic data, which often contain gene identifiers in the row names.
Here we're performing any internal tibble coercion step to ensure row names
are always moved to a \code{"rowname"} column in the CSV export.


}

\section{Debugging}{




Note that this function currently wraps \code{data.table::fwrite()} by default
for exporting \code{data.frame} and \code{matrix} class objects.


}

\examples{
data(deseq)

## DESeqAnalysis ====
export(deseq, dir = "example")

## Clean up.
unlink("example", recursive = TRUE)
}
\seealso{
Packages:
\itemize{
\item \href{http://r-datatable.com/}{data.table}.
\item \href{http://readr.tidyverse.org}{readr}.
\item \href{https://cran.r-project.org/package=rio}{rio}.
\item \href{http://bioconductor.org/packages/rtracklayer/}{rtracklayer}.
\item \href{https://vroom.r-lib.org}{vroom}.
}

Export functions:
\itemize{
\item \code{data.table::fwrite()}.
\item \code{readr::write_csv()}.
\item \code{rio::export()}.
\item \code{rtracklayer::export()}.
\item \code{vroom::vroom_write()}.
}
}
